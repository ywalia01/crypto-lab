Theory: 

One-Time Pad is the only algorithm that is truly unbreakable and can be used for low-bandwidth channels requiring very high security(ex. for military uses).

To encrypt every new message requires a new key of the same length as the new message in one-time pad.

The ciphertext generated by the One-Time pad is random, so it does not have any statistical relation with the plain text.

Code: 

import random
import string

plaintext = input("\nEnter Plaintext: ").upper()
print("Generating random key...")
print(" ")

otp = ''.join((random.choice(string.ascii_uppercase)
               for x in range(len(plaintext))))

plaintextList = []
otpList = []

for c1 in plaintext:
    temp = ord(c1) - 65
    plaintextList.append(temp)

for c2 in otp:
    temp = ord(c2) - 65
    otpList.append(temp)

print("Plaintext: ", plaintextList)
print("Key: ", otpList)

tempList = []
for i in range(len(plaintextList)):
    tempList.append(plaintextList[i] ^ otpList[i])

ciphertextList = []
for item in tempList:
    if(item > 25):
        item -= 26
        ciphertextList.append(item)
    else:
        ciphertextList.append(item)

print("Cipher Matrix: ", ciphertextList)

ct = ""
for number in ciphertextList:
    number += 65
    temp = chr(number)
    tempstr = str(temp)
    ct = ct + tempstr

print("Ciphertext: ", ct.lower())
print(" ")
print(" ")

Output:
https://lh4.googleusercontent.com/j7GGxiM5-pboYF5rFxhe1E4wK7eC76kW9weVFJlqiwtxZPprIptQfaldc1-k7AivUU7KY_nE8_ebrIGo2zzTUWKZ_jH9-ovrRmNPMnCInXkV0wUuPFQ_KWYqZ86gQAiGmdrkVXZOZ209GW58bAvuLGq7vVeaqcadZPJkh0nsquUMnrNHeTu9pZg