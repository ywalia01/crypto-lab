Theory: 

The rail fence cipher (also called a zigzag cipher) is an easy to apply form of transposition cipher. It derives its name from the way in which it is encoded. 
It jumbles up the order of the letters of a message in a quick convenient way. It also has the security of a key to make it a little bit harder to break.
The Rail Fence cipher works by writing the message on alternate lines across the page, and then reading off each line in turn. 
For example, the plaintext "defend the east wall" is written as shown below, with all spaces removed.

The ciphertext is then read off by writing the top row first, followed by the bottom row, to get "DFNTEATALEEDHESWL".

Code: 

def encryptRailFence(text, key):
    rail = [['\n' for i in range(len(text))]
            for j in range(key)]

    dir_down = False
    row, col = 0, 0

    for i in range(len(text)):
        if (row == 0) or (row == key - 1):
            dir_down = not dir_down

        rail[row][col] = text[i]
        col += 1

        if dir_down:
            row += 1
        else:
            row -= 1

    result = []
    for i in range(key):
        for j in range(len(text)):
            if rail[i][j] != '\n':
                result.append(rail[i][j])
    return("" . join(result))


def decryptRailFence(cipher, key):

    rail = [['\n' for i in range(len(cipher))]
            for j in range(key)]

    dir_down = None
    row, col = 0, 0

    for i in range(len(cipher)):
        if row == 0:
            dir_down = True
        if row == key - 1:
            dir_down = False

        rail[row][col] = '*'
        col += 1

        if dir_down:
            row += 1
        else:
            row -= 1

    index = 0
    for i in range(key):
        for j in range(len(cipher)):
            if ((rail[i][j] == '*') and
               (index < len(cipher))):
                rail[i][j] = cipher[index]
                index += 1

    result = []
    row, col = 0, 0
    for i in range(len(cipher)):
        if row == 0:
            dir_down = True
        if row == key-1:
            dir_down = False

        if (rail[row][col] != '*'):
            result.append(rail[row][col])
            col += 1

        if dir_down:
            row += 1
        else:
            row -= 1
    return("".join(result))

def main():
    plaintext = input("\nEnter Plaintext: ")
    rails = int(input("Enter no. of rails: "))
    out = encryptRailFence(plaintext, rails)
    print("Ciphertext: ", out)
    out2 = decryptRailFence(out, rails)
    print("After deciphering: ", out2)
    print(" ")

main()

Output: 
https://lh6.googleusercontent.com/aZdgJF72Pp43I3U2EqxE7CqaxQXHC83ekSJt6GVsGbN1uzLLKdBq9RbwLlwx9CKzmroWKWwgDGJqxFI0VRFOueZqbP3gni4YrtZgs9mJ1FlUP6q_gkuGIcT7Ge-GVYP2raQR6ls4zXZDpR-AtHxia-_sLV26fLhpB2_9S-Okf68c8fZ0UtoVN9s